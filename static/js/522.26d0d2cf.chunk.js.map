{"version":3,"file":"static/js/522.26d0d2cf.chunk.js","mappings":"wRAGaA,EAAmBC,EAAAA,EAAAA,KAAH,yMAWhBC,EAAcD,EAAAA,EAAAA,MAAH,4NAeXE,EAAeF,EAAAA,EAAAA,OAAH,wTAiBZG,GAAoBH,EAAAA,EAAAA,GAAOI,EAAAA,IAAPJ,CAAH,yH,SCb9B,EAzBmB,SAAC,GAA+B,IAA7BK,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC9B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OACE,UAACV,EAAD,CAAkBM,SATC,SAAAK,GACnBA,EAAEC,iBACE,KAAAH,EAAOI,QAGXP,EAASG,EACV,EAGC,WACE,SAACP,EAAD,CAAaY,KAAK,OAAOC,SAdb,SAAAJ,GACdD,EAAUC,EAAEK,OAAOC,MACpB,EAY+CC,YAAaX,KACzD,SAACJ,EAAD,CAAcW,KAAK,SAAnB,UACE,SAACV,EAAD,QAIP,ECCD,EAzBc,WAAO,IAAD,EAClB,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOW,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAEnDC,EAAAA,EAAAA,YAAU,WACHF,GAAiC,KAAjBA,IAGrBG,EAAAA,EAAAA,IAAgBH,GAAcI,KAAKR,EACpC,GAAE,CAACI,IAMJ,OACE,UAAC,IAAD,YACE,SAAC,EAAD,CAAYlB,SANC,SAAAW,GACfM,EAAgB,CAAEd,OAAQQ,GAC3B,EAImCV,YAAaiB,KAC7C,SAAC,KAAD,IACCL,IAAQ,SAACU,EAAA,EAAD,CAASV,KAAMA,EAAMW,IAAG,OAGtC,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movie/Movie.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const SearchFormStyled = styled.form`\n  display: inline-flex;\n  text-align: center;\n  align-items: center;\n  width: 100%;\n  padding: 8px;\n  border-radius: 8px;\n  background-color: black;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  border: 0;\n  border-radius: 8px;\n  outline: none;\n  width: 70%;\n  height: 22px;\n\n  :hover,\n  :focus {\n    background-color: black;\n    border: 2px solid white;\n    color: white;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  position: relative;\n  width: 24px;\n  height: 24px;\n  border: 0;\n  border-radius: 50%;\n  margin-left: 8px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabelStyled = styled(FaSearch)`\n  fill: red;\n  position: absolute;\n  left: 6px;\n  top: 6px;\n  width: 12px;\n  height: 12px;\n`;\n","import { useState } from 'react';\nimport {\n  SearchButton,\n  SearchFormStyled,\n  SearchInput,\n  ButtonLabelStyled,\n} from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, placeHolder }) => {\n  const [querry, setQuerry] = useState('');\n\n  const onInput = e => {\n    setQuerry(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if (querry.trim() === ``) {\n      return;\n    }\n    onSubmit(querry);\n  };\n\n  return (\n    <SearchFormStyled onSubmit={onSubmitForm}>\n      <SearchInput type=\"text\" onChange={onInput} placeholder={placeHolder}/>\n      <SearchButton type=\"submit\">\n        <ButtonLabelStyled />\n      </SearchButton>\n    </SearchFormStyled>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { getFilmByQuerry } from '../../components/filmApi/filmApi';\nimport { Container } from '../../components/Container/Container.styled';\nimport Gallery from '../../components/Gallery/Gallery';\nimport SearchForm from '../../components/SearchForm/SearchForm';\n\nconst Movie = () => {\n  const [data, setData] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querryParams = searchParams.get('querry') ?? '';\n\n  useEffect(() => {\n    if (!querryParams || querryParams === '') {\n      return;\n    }\n    getFilmByQuerry(querryParams).then(setData);\n  }, [querryParams]);\n\n  const onSubmit = value => {\n    setSearchParams({ querry: value });\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={onSubmit} placeHolder={querryParams}/>\n      <Outlet />\n      {data && <Gallery data={data} way={``}/>}\n    </Container>\n  );\n};\n\nexport default Movie;\n"],"names":["SearchFormStyled","styled","SearchInput","SearchButton","ButtonLabelStyled","FaSearch","onSubmit","placeHolder","useState","querry","setQuerry","e","preventDefault","trim","type","onChange","target","value","placeholder","data","setData","useSearchParams","searchParams","setSearchParams","querryParams","get","useEffect","getFilmByQuerry","then","Gallery","way"],"sourceRoot":""}