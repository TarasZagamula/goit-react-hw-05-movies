{"version":3,"file":"static/js/387.b1f2d08d.chunk.js","mappings":"mOAEaA,EAAYC,EAAAA,EAAAA,IAAH,6LAUTC,EAAaD,EAAAA,EAAAA,GAAH,8DAIVE,EAAYF,EAAAA,EAAAA,GAAH,sKASTG,EAAaH,EAAAA,EAAAA,EAAH,yC,kBCtBfI,EAAcC,EAAQ,IAAtBD,UA2CR,EA/BgB,WACd,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,EAAOL,IAAPK,GAMR,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeF,GAAIG,KAAKJ,EACzB,GAAE,CAACC,IAEGF,EAAKM,OAAS,GACnB,SAACZ,EAAD,UACGM,EAAKO,KAAI,SAAAC,GAAC,OACT,UAACb,EAAD,YACE,UAACH,EAAD,YACE,wBAAKgB,EAAEC,UACP,gBACEC,KAzBCC,EAyBWH,EAAEI,eAAeC,YAxBpCF,EAGDA,EAAIG,SAAJ,YACKH,EAAII,UAAU,EAAGJ,EAAIL,QAExB,sCAAN,OAA6CK,GALrC,6FAwBIK,IAAKR,EAAEI,eAAeK,SACtBC,MAAM,aAGV,SAACtB,EAAD,UAAaY,EAAEW,YATDX,EAAEN,IArBX,IAAAS,CAoBE,OAeb,UAACf,EAAD,sDACyC,6CAG5C,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AuthorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n  width: calc(100% / 6);\n\n  @media screen and (min-width: 480px) {\n    width: calc(100% / 4);\n  }\n`;\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 8px;\n`;\nexport const ReviewBox = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n\n  @media screen and (min-width: 480px) {\n    flex-direction: row;\n  }\n`;\nexport const ReviewText = styled.p`\n  padding: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { AuthorBox, ReviewBox, ReviewList, ReviewText } from './Reviews.styled';\nimport { getReviewsById } from '../filmApi/filmApi';\nconst { useParams } = require('react-router-dom');\n\nconst imgUrl = url => {\n  if (!url) {\n    return `https://t4.ftcdn.net/jpg/04/00/24/31/360_F_400243185_BOxON3h9avMUX10RsDkt3pJ8iQx72kS3.jpg`;\n  }\n  if (url.includes(`https://`)) {\n    return url.substring(1, url.length);\n  }\n  return `https://image.tmdb.org/t/p/original${url}`;\n};\n\nconst Reviews = () => {\n  const [data, setData] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getReviewsById(id).then(setData);\n  }, [id]);\n\n  return data.length > 0 ? (\n    <ReviewList>\n      {data.map(i => (\n        <ReviewBox key={i.id}>\n          <AuthorBox>\n            <h2>{i.author}</h2>\n            <img\n              src={imgUrl(i.author_details.avatar_path)}\n              alt={i.author_details.username}\n              width=\"100%\"\n            />\n          </AuthorBox>\n          <ReviewText>{i.content}</ReviewText>\n        </ReviewBox>\n      ))}\n    </ReviewList>\n  ) : (\n    <ReviewText>\n      Is there anybody out there? I think no <span>&#128533;</span>\n    </ReviewText>\n  );\n};\n\nexport default Reviews;\n"],"names":["AuthorBox","styled","ReviewList","ReviewBox","ReviewText","useParams","require","useState","data","setData","id","useEffect","getReviewsById","then","length","map","i","author","src","url","author_details","avatar_path","includes","substring","alt","username","width","content"],"sourceRoot":""}